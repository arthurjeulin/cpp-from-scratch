#include <iostream>
/**
 * To remember: As soon as we start 
 * implementing a Constructor the
 * compiler does do the default 
 * constructor.
 * We can still tell to the constructor
 * to general the default constructor
 * using Point = default;
 */
struct Point
{
  int x;
  int y;
  /**
   * Default constructor generated by
   * the compiler.
   * This is needed as soon as we implement
   * a constructor because otherwise
   * the compiler won't be generating
   * the default constructor
   */
  Point() = default;
  /**
   * Constructor allow to initialize
   * data member
   * It is a member function a bit special
   * to initialize object we are creating
   */
  /**
   * Empty parameter list
   * Use member initialization list : x(0), y(0)
   * Before the body {}
   */
  Point(): x(0), y(0){}

  void print()
  {
    std::cout << "x: " << x << "\n";      
    std::cout << "y: " << y << "\n";    
  }
};

int main()
{
  /**
   * Instance of a struct/ class is
   * an object
   */
  Point p;
  p.print();
  return 0;
}